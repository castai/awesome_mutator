# Default values for awesome-mutator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

maxUnavailable: 1

rules: |
    [
      {
        "name": "remove-agentpool-for-canyon",
        "removeNodeSelectors": ["agentpool"],
        "addNodeSelectors": {"scheduling.cast.ai/node-template": "test-mut-nt-3"},
        "addTolerations": [
          {"key": "scheduling.cast.ai/node-template", "operator": "Equal", "value": "backend", "effect": "NoSchedule"}
        ]
      }
    ]

namespaces: ""

image:
  repository: ghcr.io/castai/awesome_mutator
  pullPolicy: IfNotPresent
  tag: "15"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
- name: certs-volume
  secret:
    secretName: awesome-mutator-tls

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: certs-volume
    mountPath: "/etc/webhook/certs"
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

failurePolicy: Ignore